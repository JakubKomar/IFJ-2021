#
# @brief Built in functions and operators
#
# @authors Jakub Křivánek (xkriva30)
#

JUMP main

# BUILT IN FUNCTIONS

LABEL tointeger

PUSHFRAME
CREATEFRAME

DEFVAR TF@f
POPS TF@f

JUMPIFEQ end_tointeger_nil TF@f nil@nil

DEFVAR TF@i
FLOAT2INT TF@i TF@f
PUSHS TF@i
POPFRAME
RETURN

LABEL end_tointeger_nil
PUSHS nil@nil
POPFRAME
RETURN


LABEL reads

PUSHFRAME
CREATEFRAME

DEFVAR TF@string
READ TF@string string

PUSHS TF@string
POPFRAME
RETURN


LABEL readi

PUSHFRAME
CREATEFRAME

DEFVAR TF@string
READ TF@string int

PUSHS TF@string
POPFRAME
RETURN

LABEL readn

PUSHFRAME
CREATEFRAME

DEFVAR TF@string
READ TF@string float

PUSHS TF@string
POPFRAME
RETURN

LABEL substr

PUSHFRAME
CREATEFRAME

DEFVAR TF@s
DEFVAR TF@i
DEFVAR TF@j
POPS TF@s
POPS TF@i
POPS TF@j

# checks if any parameter is nil
DEFVAR TF@nil_check
EQ TF@nil_check TF@s nil@nil
JUMPIFEQ end_substr_error_8 TF@nil_check bool@true
EQ TF@nil_check TF@i nil@nil
JUMPIFEQ end_substr_error_8 TF@nil_check bool@true
EQ TF@nil_check TF@j nil@nil
JUMPIFEQ end_substr_error_8 TF@nil_check bool@true

# checks if j < i
DEFVAR TF@jlti
LT TF@jlti TF@j TF@i
JUMPIFEQ end_substr_empty TF@jlti bool@true

# check if i and j arent out of bounds 1 to #s
DEFVAR TF@in_bounds
DEFVAR TF@len
PUSHS TF@s
CALL hashtag
POPS TF@len
LT TF@in_bounds TF@i int@1
JUMPIFEQ end_substr_empty TF@in_bounds bool@true
LT TF@in_bounds TF@j int@1
JUMPIFEQ end_substr_empty TF@in_bounds bool@true
GT TF@in_bounds TF@i TF@len
JUMPIFEQ end_substr_empty TF@in_bounds bool@true
GT TF@in_bounds TF@i TF@len
JUMPIFEQ end_substr_empty TF@in_bounds bool@true

# sub i to be have the index from 0
SUB TF@i TF@i int@1

DEFVAR TF@substr
MOVE TF@substr TF@s

DEFVAR TF@loopi
DEFVAR TF@last_escaped
DEFVAR TF@substr_i
DEFVAR TF@esc
DEFVAR TF@c
MOVE TF@last_escaped bool@false
STRLEN TF@len TF@s
MOVE TF@substr_i int@0
MOVE TF@loopi TF@i

# loops throught the string and moves chars to substr
LABEL substr_loop
JUMPIFEQ end_substr TF@loopi TF@j

GETCHAR TF@c TF@s TF@i
ADD TF@i TF@i int@1
ADD TF@loopi TF@loopi int@1

JUMPIFEQ substr_not_escaped TF@last_escaped bool@false
SETCHAR TF@substr TF@substr_i TF@c
ADD TF@substr_i TF@substr_i int@1
MOVE TF@last_escaped bool@false
JUMP substr_loop

LABEL substr_not_escaped
EQ TF@esc TF@c string@\092
JUMPIFEQ substr_esc TF@esc bool@true

SETCHAR TF@substr TF@substr_i TF@c
ADD TF@substr_i TF@substr_i int@1
JUMP substr_loop

LABEL substr_esc
MOVE TF@last_escaped bool@true
SUB TF@loopi TF@loopi int@1
JUMP substr_loop


LABEL end_substr_empty
DEFVAR TF@empty_str
MOVE TF@empty_str string@\000
PUSHS TF@empty_str
POPFRAME
RETURN

LABEL end_substr_error_8
EXIT int@8

LABEL end_substr
SETCHAR TF@substr TF@substr_i string@\003
ADD TF@substr_i TF@substr_i int@1
JUMPIFNEQ end_substr TF@substr_i TF@len
PUSHS TF@substr

POPFRAME
RETURN

# OPERATORS

LABEL hashtag

PUSHFRAME
CREATEFRAME

DEFVAR TF@str
POPS TF@str
DEFVAR TF@len
STRLEN TF@len TF@str
DEFVAR TF@escaped_len
MOVE TF@escaped_len TF@len

DEFVAR TF@last_escaped
MOVE TF@last_escaped bool@false

DEFVAR TF@i
MOVE TF@i int@0
DEFVAR TF@c

# loops throught the string and subs lenght for every escape sequence
LABEL hashtag_loop
JUMPIFEQ end_hashtag TF@i TF@len

GETCHAR TF@c TF@str TF@i
ADD TF@i TF@i int@1

JUMPIFEQ hastag_not_escaped TF@last_escaped bool@false
MOVE TF@last_escaped bool@false
JUMP hashtag_loop

LABEL hastag_not_escaped
JUMPIFNEQ hashtag_loop TF@c string@\092
SUB TF@escaped_len TF@escaped_len int@1
MOVE TF@last_escaped bool@true
JUMP hashtag_loop


LABEL end_hashtag

PUSHS TF@escaped_len
POPFRAME
RETURN


# MAIN FOR TESTING
LABEL main

CREATEFRAME

# TOINTEGER TEST
WRITE string@TOINTEGER\032TEST:\010
PUSHS float@0x4.2p+0
CALL tointeger
DEFVAR TF@i
POPS TF@i
DPRINT TF@i
DEFVAR TF@types
TYPE TF@types TF@i
WRITE string@\010
WRITE TF@types
WRITE string@\010\010
CREATEFRAME

# READS TEST
WRITE string@READS\032TEST:\010
CALL reads
DEFVAR TF@test
POPS TF@test
WRITE TF@test
DEFVAR TF@types
TYPE TF@types TF@test
WRITE string@\010
WRITE TF@types
WRITE string@\010\010
CREATEFRAME

# READI TEST
WRITE string@READI\032TEST:\010
CALL readi
DEFVAR TF@test
POPS TF@test
WRITE TF@test
DEFVAR TF@types
TYPE TF@types TF@test
WRITE string@\010
WRITE TF@types
WRITE string@\010\010
CREATEFRAME

# READN TEST
WRITE string@READN\032TEST:\010
CALL readn
DEFVAR TF@test
POPS TF@test
WRITE TF@test
DEFVAR TF@types
TYPE TF@types TF@test
WRITE string@\010
WRITE TF@types
WRITE string@\010\010
CREATEFRAME

# substr TEST
WRITE string@SUBSTR\032TEST:\010
DEFVAR TF@string
READ TF@string string
DEFVAR TF@i
READ TF@i int
DEFVAR TF@j
READ TF@j int
PUSHS TF@j
PUSHS TF@i
PUSHS TF@string
CALL substr
DEFVAR TF@test
POPS TF@test
WRITE TF@test
WRITE string@\010\010
CREATEFRAME

# hastag TEST
WRITE string@HASHTAG\032TEST:\010
DEFVAR TF@string
READ TF@string string
PUSHS TF@string
CALL hashtag
DEFVAR TF@test
POPS TF@test
WRITE TF@test
WRITE string@\010\010
CREATEFRAME